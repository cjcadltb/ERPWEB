@using System.Web.UI.WebControls;
@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridView_horas_extras";
        settings.CallbackRouteValues = new { Controller = "HorasExtras", Action = "GridViewPartial_horas_extras", Fecha_ini = ViewBag.fecha_ini, Fecha_fin = ViewBag.fecha_fin };
        settings.KeyFieldName = "IdHorasExtras";
        settings.Width = Unit.Percentage(100);

        //Configuracion responsive
        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCellsWindowLimit;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 500;

        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Mode = GridViewPagerMode.ShowPager;
        settings.SettingsPager.AlwaysShowPager = true;


        settings.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        settings.Settings.ShowFilterRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.Toolbars.Add(t =>
        {
            t.EnableAdaptivity = true;
            t.Items.Add(GridViewToolbarCommand.ExportToPdf);
            t.Items.Add(GridViewToolbarCommand.ExportToXls);
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx);
            t.Items.Add(GridViewToolbarCommand.ExportToDocx);
            t.Items.Add(GridViewToolbarCommand.ExportToRtf);
            t.Items.Add(GridViewToolbarCommand.ExportToCsv);
        });
        settings.SettingsExport.RenderBrick = (sender, e) =>
        {
            if (e.RowType == GridViewRowType.Data && e.VisibleIndex % 2 == 0)
                e.BrickStyle.BackColor = System.Drawing.Color.FromArgb(0xEE, 0xEE, 0xEE);
        };
        settings.HtmlRowPrepared = (s, e) =>
        {
            if (Convert.ToString(e.GetValue("Estado")) == "I")
            {
                e.Row.ForeColor = System.Drawing.Color.Red;
            }
            if (Convert.ToString(e.GetValue("Estado")) == "P")
            {
                e.Row.ForeColor = System.Drawing.Color.Blue;
            }
        };
        settings.Columns.Add(c =>
        {
            c.Caption = "#";
            c.SetDataItemTemplateContent(tc =>
            {
                if (Convert.ToString(DataBinder.Eval(tc.DataItem, "Estado")) == "A")
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("Aprobar", "Aprobar", new { IdNomina_Tipo = DataBinder.Eval(tc.DataItem, "IdNomina_Tipo"), IdNomina_TipoLiqui = DataBinder.Eval(tc.DataItem, "IdNomina_TipoLiqui"), IdPeriodo = DataBinder.Eval(tc.DataItem, "IdPeriodo"), IdHorasExtras = DataBinder.Eval(tc.DataItem, "IdHorasExtras") },
                            new { onclick = "return confirm('¿Está seguro de que desea aprobar las horas extras?')" })
                    );
                }
            });
            //int IdNomina_Tipo,int IdNomina_TipoLiqui, int IdPeriodo, int IdHorasExtras
            c.Settings.AllowDragDrop = DefaultBoolean.False;
            c.Settings.AllowSort = DefaultBoolean.False;
            c.Width = Unit.Pixel(150);
        });

        settings.Columns.Add("IdHorasExtras", "ID").Width = Unit.Percentage(5);
        settings.Columns.Add("IdPeriodo", "Périodo").Width = Unit.Percentage(5);
        settings.Columns.Add("Descripcion", "Nómina").Width = Unit.Percentage(20);
        settings.Columns.Add("DescripcionProcesoNomina", "Nómina tipo").Width = Unit.Percentage(30);

        settings.Columns.Add(column =>
        {
            column.FieldName = "pe_FechaIni";
            column.Caption = "Fecha desde";
            column.Width = Unit.Percentage(15);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "pe_FechaFin";
            column.Caption = "Fecha desde";
            column.Width = Unit.Percentage(15);
            column.PropertiesEdit.DisplayFormatString = "d";
            column.EditorProperties().DateEdit(sp =>
            {
                column.PropertiesEdit.DisplayFormatString = "d";
                sp.Width = Unit.Percentage(100);
            });
        });
      
    });
}
@grid.Bind(Model).GetHtml()